"""add users.

Revision ID: f8e1a8684247
Revises: 164daf30e242
Create Date: 2025-09-26 18:15:01.148801

"""

import advanced_alchemy
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "f8e1a8684247"
down_revision = "164daf30e242"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("login", sa.String(length=256), nullable=False),
        sa.Column("password", sa.String(length=128), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("id", sa.BigInteger().with_variant(sa.Integer(), "sqlite"), nullable=False),
        sa.Column("created_at", advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("login", name=op.f("uq_users_login")),
    )
    op.add_column("notes", sa.Column("author_id", sa.BigInteger().with_variant(sa.Integer(), "sqlite"), nullable=False))
    op.add_column("notes", sa.Column("is_deleted", sa.Boolean(), nullable=False))
    op.create_foreign_key(op.f("fk_notes_author_id_users"), "notes", "users", ["author_id"], ["id"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("fk_notes_author_id_users"), "notes", type_="foreignkey")
    op.drop_column("notes", "is_deleted")
    op.drop_column("notes", "author_id")
    op.drop_table("users")
    # ### end Alembic commands ###
